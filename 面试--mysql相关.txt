0.什么是mysql？
	MySQL是一种开放源代码的关系型数据库管理系统。
	1.MySQL是一个关系型数据库管理系统，由瑞典MySQLAB公司开发，属于Oracle旗下产品。
	2.MySQL使用最常用的数据库管理语言--结构化查询语言（SQL）进行数据库管理。
	3.MySQL是开放源代码的，任何人都可以下载并根据个性化的需要对其进行修改。
	4.MySQL因为其速度、可靠性和适应性而备受关注，MySQL是管理内容最好的选择。

1.Mysql索引
	1.普通索引 INDEX：列值可以取空值或重复值。创建使用关键字INDEX或KEY；
	2.唯一索引 UNIQUE：列值不能重复；即索引列值必须是唯一的，但可以是空值；创建使用关键字UNIQUE；
	3.主键索引 PRIMARY KEY：主键索引是系统自动创建的主键索引，并且是唯一的。与唯一索引区别是；列值不能为空；
	4.聚簇索引：就是数据存储的物理存储顺序，非聚簇索引就是索引顺序与数据的物理顺序无关。一个表只能有一个聚簇索引。目前只有InoDB和solidDB支持。
	5.全文索引 FULLTEXT：只能创建在varchar或text的列上；建立全文索引能够在全文索引的列上进行查找。
	
2.MySQL常见的三种存储引擎为InnoDB、MyISAM和MEMORY。
	1.InnoDB特点： 支持事务处理，支持外键，支持崩溃修复能力和并发控制
	2.MyISAM特点： 插入数据快，空间和内存使用比较低。如果表主要是用于插入新记录和读出记录 和 并发性要求比较低，MyISAM能实现处理高效率
	3.MEMORY特点： 所有的数据都在内存中，数据的处理速度快，但是安全性不高
	
3.Mysql什么是事务？什么是锁？
	1。事务就是一系列的操作，要满足ACID,要么全成功，要么全失败,只满足这还不够，需要ACID;
	ACID:原子性,一致性，隔离性，持久性
	原子性： 事务是最小的执行单位，不允许分割。事务的原子性确保动作要么全部完成，要么完全不起作用；
	一致性： 执行事务前后，数据保持一致；
	隔离性： 并发访问数据库时，一个用户的事物不被其他事物所干扰，各并发事务之间数据库是独立的；
	持久性: 一个事务被提交之后。它对数据库中数据的改变是持久的，即使数据库 发生故障也不应该对其有任何影响。
		
4.MySQL什么是主从复制
	将主数据库中的DDL和DML操作通过二进制日志传输到从数据库上，然后将这些日志重新执行（重做）；从而使得从数据库的数据与主数据库保持一致。
	1.主：binlog线程——记录下所有改变了数据库数据的语句，放进master上的binlog中；
	2.从：io线程——在使用start slave 之后，负责从master上拉取 binlog 内容，放进 自己的relay log中；
	3.从：sql执行线程——执行relay log中的语句；
5.主从复制的作用
		1、主数据库出现问题，可以切换到从数据库。
		2、可以进行数据库层面的读写分离。
		3、可以在从数据库上进行日常备份。
		
6.主从复制能否代替备份？
	不能，误操作，也会被同步到从服务器；如果你在主上面误删除了某个表或者库，这个操作同样会被同步到从服务器。
	
7.主从复制的最大问题是什么？
	数据延迟
	
8.主从复制的具体操作
	 Mysql数据库没有增量备份的机制，当数据量太大的时候备份是一个很大的问题。还好mysql数据库提供了一种主从备份的机制，其实就是把主数据库的所有的数据同时写到备份的数据库中。实现mysql数据库的热备份。
	要想实现双机的热备，首先要了解主从数据库服务器的版本的需求。要实现热备mysql的版本都高于3.2。还有一个基本的原则就是作为从数据库的数据版本可以高于主服务器数据库的版本，但是不可以低于主服务器的数据库版本。
	当然要实现mysql双机热备，除了mysql本身自带的REPLICATION功能可以实现外，也可以用Heartbeat这个开源软件来实现。不过本文主要还是讲如何用mysql自带的REPLICATION来实现mysql双机热备的功能。
	
9.MySQL主从方案主要作用？
	1.读写分离，使数据库能支撑更大的并发
	
10.Mysql主从延迟处理方案？
	1.mysql版本升级到5.6以上
	2.采用nosql，redis ,写数据时，先写到数据库，再写到redis,读数据先读取redis,
	
11.mysql优化怎么做的？
	4）部署大负载架构体系：数据库服务器单独出来，负载大时可以采用主从复制，读写分离机制进行设计
	1）设计角度：存储引擎的选择，字段类型选择，范式
	2）功能角度：可以利用mysql自身的特性，如索引，查询缓存，碎片整理，分区、分表等
	3）sql语句的优化方面:尽量简化查询语句，能查询字段少就尽量少查询字段，优化分页语句、分组语句等。
	5）从硬件上升级数据库服务器。

20.说说对SQL语句优化有哪些方法？（选择几条）
	（1）避免在索引列上使用计算
	（3）对查询进行优化，应尽量避免全表扫描，首先应考虑在 where 及 order by 涉及的列上建立索引。
	（4）应尽量避免在 where 子句中对字段进行 null 值判断，否则将导致引擎放弃使用索引而进行全表扫描
	（5）避免索引不会命中的情况
27.MySQL sql语句应该考虑哪些安全性？
	防止sql注入，对特殊字符进行转义、过滤或者使用预编译sql语句绑定
	使用最小权限原则，特别是不要使用root账户，为不同的动作或者操作建立不同的账户
	当sql出错时，不要把数据库出错的信息暴露到客户端
		
	
12.对于大流量网站，采用什么方法来解决访问量的问题
	1.确认服务器硬件是否能够支持当前的流量
	2.数据库读写分离，优化数据表
	3.优化SQL语句
	4.使用不同主机分流主要流量

13.索引对数据库系统的负面影响是什么?
	创建索引和维护索引需要耗费时间，这个时间随着数据量的增加而增加；
	索引需要占用物理空间，不光是表需要占用数据空间，每个索引也需要占用物理空间；
	当对表进行增、删、改的时候索引也要动态维护，这样就降低了数据的维护速度。

14.为数据表建立索引的原则有哪些?
	在最频繁使用的、用以缩小查询范围的字段上建立索引
	在平频繁使用的、需要排序的字段上建立索引
	
15.什么情况下不宜建立索引?
	对于查询中很少涉及的列或者重复值比较多的列，不宜建立索引
	对于一些特殊的数据类型，不宜建立索引，比如文本字段(text)，值范围较少的知道等。

16.什么叫视图？游标是什么？
	视图是一种虚拟的表，具有和物理表相同的功能。可以对视图进行增，改，查，操作，视图通常是有一个表或者多个表的行或列的子集。对视图的修改不影响基本表。它使得我们获取数据更容易，相比多表查询。
	游标：是对查询出来的结果集作为一个单元来有效的处理。游标可以定在该单元中的特定行，从结果集的当前行检索一行或多行。可以对结果集当前行做修改。一般不使用游标，但是需要逐条处理数据的时候，游标显得十分重要。
	
17.什么是存储过程？用什么来调用？
	存储过程是一个预编译的SQL语句，优点是允许模块化的设计，就是说只需创建一次，以后在该程序中就可以调用多次。如果某次操作需要执行多次SQL，使用存储过程比单纯SQL语句执行要快。可以用一个命令对象来调用存储过程。

18.如何通俗地理解三个范式？
	第一范式：1NF是对属性的原子性约束，要求属性具有原子性，不可再分解；
	第二范式：2NF是对记录的惟一性约束，要求记录有惟一标识，即实体的惟一性； 
	第三范式：3NF是对字段冗余性的约束，即任何字段不能由其他字段派生出来，它要求字段没有冗余。。

19.主键、外键和索引的区别？
	主键–主键只能有一个
	外键–一个表可以有多个外键
	索引–一个表可以有多个唯一索引
	

21.Select Count (*)和Select Count(1)以及Select Count(column)区别
	一般情况下，Select Count (*)和Select Count(1)两者的返回结果是一样的
	假如表沒有主键(PK), 那么count(1)比count()快， 如果有主键PK的話，那count(主键)最快, 如果你的表只有一个字段的话那count()就是最快的
	count(*) 跟 count(1) 的结果一样，都包括对NULL的统计，而count(column) 是不包括NULL的统计
	count(column) 是表示结果集中有多少个column字段不为空的记录
	
22.mysql索引不会命中的情况
	1.如果条件中有 or ，即使其中有条件带索引也不会命中(这也是为什么尽量少用or的原因）
	注意：要想使用or，又想让索引生效，只能将or条件中的每个列都加上索引如果出现OR的一个条件没有索引时，建议使用 union ，拼接多个查询语句
	2.like查询是以%开头，如果是int型索引不会命中，字符型的命中’test%’百分号只有在右边才可以命中
	3.没有查询条件，或者查询条件没有建立索引
	4.采用 not in, not exist
	5. is null 不会走， is not null 会走
	6.联合索引遵循最左原则，不满足的不会命中
	7.链表时，如果关联字段的的编码不同，也不会走索引。如一个表时 utf8，另外一个表是utf8mb4
	
23.varchar char
	Varchar 对每个英文(ASCII)字符都占用2个字节，对一个汉字也只占用两个字节
	char 对英文(ASCII)字符占用1个字节，对一个汉字占用2个字节
	
24.可以使用多少列创建索引？
	任何标准表最多可以创建16个索引列。
	
25.SQL注入漏洞产生的原因？如何防止？
	SQL注入产生的原因：程序开发过程中不注意规范书写sql语句和对特殊字符进行过滤，导致客户端可以通过全局变量POST和GET提交一些sql语句正常执行。
	防止SQL注入的方式：
		开启配置文件中的magic_quotes_gpc 和 magic_quotes_runtime设置
		执行sql语句时使用addslashes进行sql语句转换
		Sql语句书写尽量不要省略双引号和单引号。
		过滤掉sql语句中的一些关键词：update、insert、delete、select、 * 。
		提高数据库表和字段的命名技巧，对一些重要的字段根据程序的特点命名，取不易被猜到的。
		
26.MySQL sql中left join、right join、inner join有什么区别？
	left join：左联接，返回包括左表中的所有记录和右表中联结字段相等的记录
	right join：右联接，返回包括右表中的所有记录和左表中联结字段相等的记录
	inner join：内联接，只返回两个表中联结字段相等的行
	

28.MySQL事务的隔离级别
	Read Uncommitted：读取未提交内容
	Read Committed：读取提交内容
	Repeatable Read：可重读
	Serializable：可串行化
	
29.MySQL drop,delete与truncate的区别
	drop直接删掉表
	truncate删除表中数据，再插入时自增长id又从1开始
	delete删除表中数据，可以加where字句。
	
30.mysql数据结构
	1.索引就是的mysql数据结构
	2.mysql索引的数据结构就是用到的B+树。
	
31.为什么推荐InnoDB表必须有主键？
	保证会有主键索引树的存在（因为数据存放在主键索引树上面），如果没有mysql会自己生成一个rowid作为自增的主键主键索引

32.为什么推荐使用整型的自增主键？
	一是方便查找比较，而是新增数据的时候只需要在最后加入，不会大规模调整树结构，如果是UUID的话，大小不好比较，新增的时候也极有可能在中间插入数据，会导致树结构大规调整，造成插入数据变慢。
	
33.时间转时间戳
	unix_timestamp(now());  
	时间转字符串
	select date_format(now(), '%Y-%m-%d');  
	时间戳转时间
	select from_unixtime(1451997924);  
	
34.MySQL-索引失效原理	

35.mysql in 走索引吗？
1.查询值少的时候走索引，多的时候不走索引